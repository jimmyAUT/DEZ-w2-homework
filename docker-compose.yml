volumes:
  w2-postgres-data:
    name: w2-postgres-data
  w2-kestra-metadata:
    name: w2-kestra-metadata
  w2-kestra-data:
    name: w2-kestra-data
  w2-pgadmin-data:
    name: w2-pgadmin-data

services:
  kestra-metadata:
    image: postgres:17-alpine
    container_name: kestra-metadata
    volumes:
      -  w2-kestra-metadata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra_metadata
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: kestra
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10


  postgres:
    image: postgres:17-alpine
    container_name: postgres
    volumes:
      - w2-postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ny_taxi
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5

  kestra:
    image: kestra/kestra:latest
    container_name: kestra 
    pull_policy: always
    # Note that this setup with a root user is intended for development purpose.
    # Our base image runs without root, but the Docker Compose implementation needs root to access the Docker socket
    # To run Kestra in a rootless mode in production, see: https://kestra.io/docs/installation/podman-compose
    user: "root"
    command: server standalone
    volumes:
      - w2-kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/kestra-wd:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://kestra-metadata:5432/kestra_metadata
            driverClassName: org.postgresql.Driver
            username: kestra
            password: kestra
        kestra:
          server:
            basicAuth:
              enabled: false
              username: "admin@kestra.io" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              basePath: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmpDir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "8080:8080"
      - "8081:8081"
    depends_on:
      kestra-metadata:
        condition: service_healthy

  pdadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=root
    volumes:
      - "w2-pgadmin-data:/var/lib/pgadmin/data" 
    ports:
      - "9000:80"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl --fail http://127.0.0.1:80/ || exit 1"]
      start_period: 10s
      interval: 5s
      timeout: 10s
      retries: 5
    restart: on-failure:5
